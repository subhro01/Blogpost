{"ast":null,"code":"import _defineProperty from \"/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NEW_USER, UPDATE_USER } from '../actions/types';\nconst intialState = {\n  new_user: {},\n  loggedin_user: {},\n  is_logged_in: false\n};\nexport default function (state = intialState, action) {\n  switch (action.type) {\n    case NEW_USER:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        new_user: action.payload,\n        is_logged_in: action.payload === 'User already exists' ? false : true\n      });\n\n    case UPDATE_USER:\n      return _objectSpread({}, state, {\n        loggedin_user: action.payload,\n        is_logged_in: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/reducers/signin_login_reducer.js"],"names":["NEW_USER","UPDATE_USER","intialState","new_user","loggedin_user","is_logged_in","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,aAAa,EAAE,EAFC;AAGhBC,EAAAA,YAAY,EAAE;AAHE,CAApB;AAMA,eAAe,UAASC,KAAK,GAAGJ,WAAjB,EAA8BK,MAA9B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,QAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BACOL,KADP;AAEIH,QAAAA,QAAQ,EAAEI,MAAM,CAACI,OAFrB;AAGIN,QAAAA,YAAY,EAAEE,MAAM,CAACI,OAAP,KAAmB,qBAAnB,GAA2C,KAA3C,GAAmD;AAHrE;;AAKJ,SAAKV,WAAL;AACI,+BACOK,KADP;AAEIF,QAAAA,aAAa,EAAEG,MAAM,CAACI,OAF1B;AAGIN,QAAAA,YAAY,EAAE;AAHlB;;AAKJ;AAAS,aAAOC,KAAP;AAdb;AAgBH","sourcesContent":["import { NEW_USER, UPDATE_USER } from '../actions/types';\n\nconst intialState = {\n    new_user: {},\n    loggedin_user: {},\n    is_logged_in: false\n}\n\nexport default function(state = intialState, action) {\n    switch(action.type) {\n        case NEW_USER:\n            console.log(action.payload)\n            return {\n                ...state,\n                new_user: action.payload,\n                is_logged_in: action.payload === 'User already exists' ? false : true\n            }\n        case UPDATE_USER:\n            return {\n                ...state,\n                loggedin_user: action.payload,\n                is_logged_in: true\n            }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}