{"ast":null,"code":"var _jsxFileName = \"/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/CreatePostComponent/PostModal.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PostModal.css';\n\nclass PostModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.backToPost = e => {\n      console.log(this.state.title, this.state.postbody);\n\n      if (this.state.title !== \"\" || this.state.postbody !== \"\") {\n        console.log();\n        const result = window.confirm('Are you sure to close ? Data will be deleted');\n        if (result) return React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });else return null;\n      } else {\n        return React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.onTitleChange = e => this.setState({\n      title: e.target.value\n    });\n\n    this.onBodyChange = e => this.setState({\n      postbody: e.target.value\n    });\n\n    this.state = {\n      title: '',\n      postbody: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"create-post-modal-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"post-back\",\n      onClick: this.backToPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u2190\")), React.createElement(\"div\", {\n      className: \"post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Create a new post\")), React.createElement(\"div\", {\n      className: \"post-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Author: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      value: this.props.author,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: this.onTitleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Uploaad image - feature coming soon\"), React.createElement(\"textarea\", {\n      name: \"postbody\",\n      onChange: this.onBodyChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Create\")))));\n  }\n\n}\n\nexport default PostModal;","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/CreatePostComponent/PostModal.js"],"names":["React","Component","Link","PostModal","constructor","props","backToPost","e","console","log","state","title","postbody","result","window","confirm","onTitleChange","setState","target","value","onBodyChange","render","onSubmitForm","author"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PostModal.css';\nclass PostModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            postbody: ''\n        }\n    }\n\n    backToPost = (e) => {\n        console.log(this.state.title, this.state.postbody);\n        if(this.state.title !== \"\" || this.state.postbody !== \"\") {\n            console.log();\n            const result = window.confirm('Are you sure to close ? Data will be deleted');\n            if(result) return <Link to='/'/>\n            else return null;\n        }\n        else {\n            return <Link to=\"/\"/>\n        } \n    }\n    \n    onTitleChange = (e) => this.setState({ title: e.target.value });\n    onBodyChange = (e) => this.setState({ postbody: e.target.value });\n\n    render() {\n        return (\n            <div className=\"create-post-modal-container\">\n                <div className=\"post-container\">\n                    <Link to=\"/\">\n                        <span className=\"post-back\" onClick={this.backToPost}>&#8592;</span>\n                    </Link>\n                    <div className=\"post-header\">\n                        <h3>Create a new post</h3>\n                    </div>\n                    <div className=\"post-body\">\n                        <form action=\"\" onSubmit={this.onSubmitForm}>\n                            Author: <input type=\"text\" name=\"author\" value={this.props.author} disabled/>\n                            <input type=\"text\" name=\"title\" onChange={this.onTitleChange}/>\n                            <button>Uploaad image - feature coming soon</button>\n                            <textarea name=\"postbody\" onChange={this.onBodyChange}/>\n                            <button type=\"submit\">Create</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostModal;"]},"metadata":{},"sourceType":"module"}