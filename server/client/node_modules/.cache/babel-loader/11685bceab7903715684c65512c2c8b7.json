{"ast":null,"code":"import { NEW_USER, UPDATE_USER } from './types';\nimport axios from 'axios';\nexport const createNewUser = userData => async dispatch => {\n  // TODO: add a new user to DB\n  const createUser = await axios({\n    method: 'POST',\n    url: 'http://localhost:5000/api/register',\n    data: JSON.stringify(userData)\n  });\n  const response = await createUser.json();\n  console.log('NEW_USER', response);\n  dispatch({\n    type: NEW_USER,\n    payload: response\n  });\n};\nexport const updateLoginUser = (userData, scheme) => async dispatch => {\n  console.log(scheme);\n\n  if (scheme === 'google') {\n    // TODO: fetch user from the DB\n    const fetchedUser = await axios.get('http://localhost:5000/auth/google');\n    dispatch({\n      type: UPDATE_USER,\n      payload: fetchedUser.data\n    });\n  } else {\n    // TODO: fetch user from the DB\n    const fetchedUser = await axios.post('/api/get_user/', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    dispatch({\n      type: UPDATE_USER,\n      payload: fetchedUser.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/actions/signin_login_action.js"],"names":["NEW_USER","UPDATE_USER","axios","createNewUser","userData","dispatch","createUser","method","url","data","JSON","stringify","response","json","console","log","type","payload","updateLoginUser","scheme","fetchedUser","get","post","headers","body"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACzD;AACA,QAAMC,UAAU,GAAG,MAAMJ,KAAK,CAAC;AAC3BK,IAAAA,MAAM,EAAE,MADmB;AAE3BC,IAAAA,GAAG,EAAE,oCAFsB;AAG3BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAHqB,GAAD,CAA9B;AAKA,QAAMQ,QAAQ,GAAG,MAAMN,UAAU,CAACO,IAAX,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAP,EAAAA,QAAQ,CAAC;AACLW,IAAAA,IAAI,EAAEhB,QADD;AAELiB,IAAAA,OAAO,EAAEL;AAFJ,GAAD,CAAR;AAIH,CAbM;AAeP,OAAO,MAAMM,eAAe,GAAG,CAACd,QAAD,EAAWe,MAAX,KAAsB,MAAMd,QAAN,IAAkB;AACnES,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;;AACA,MAAGA,MAAM,KAAK,QAAd,EAAwB;AACpB;AACA,UAAMC,WAAW,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,mCAAV,CAA1B;AACAhB,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf,WADD;AAELgB,MAAAA,OAAO,EAAEG,WAAW,CAACX;AAFhB,KAAD,CAAR;AAIH,GAPD,MAOO;AACH;AACA,UAAMW,WAAW,GAAG,MAAMlB,KAAK,CAACoB,IAAN,CAAW,gBAAX,EAA6B;AACnDf,MAAAA,MAAM,EAAE,MAD2C;AAEnDgB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF0C;AAKnDC,MAAAA,IAAI,EAAEd,IAAI,CAACC,SAAL,CAAeP,QAAf;AAL6C,KAA7B,CAA1B;AAOAC,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEf,WADD;AAELgB,MAAAA,OAAO,EAAEG,WAAW,CAACX;AAFhB,KAAD,CAAR;AAIH;AACJ,CAvBM","sourcesContent":["import { NEW_USER, UPDATE_USER } from './types';\nimport axios from 'axios';\nexport const createNewUser = (userData) => async dispatch => {\n    // TODO: add a new user to DB\n    const createUser = await axios({\n        method: 'POST',\n        url: 'http://localhost:5000/api/register',\n        data: JSON.stringify(userData)\n    })\n    const response = await createUser.json()\n    console.log('NEW_USER', response);\n    dispatch({\n        type: NEW_USER,\n        payload: response\n    })\n}\n\nexport const updateLoginUser = (userData, scheme) => async dispatch => {\n    console.log(scheme);\n    if(scheme === 'google') {\n        // TODO: fetch user from the DB\n        const fetchedUser = await axios.get('http://localhost:5000/auth/google');\n        dispatch({\n            type: UPDATE_USER, \n            payload: fetchedUser.data\n        })\n    } else {\n        // TODO: fetch user from the DB\n        const fetchedUser = await axios.post('/api/get_user/', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        })\n        dispatch({\n            type: UPDATE_USER, \n            payload: fetchedUser.data\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}