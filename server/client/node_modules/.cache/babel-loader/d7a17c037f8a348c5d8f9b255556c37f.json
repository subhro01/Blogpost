{"ast":null,"code":"var _jsxFileName = \"/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/PostHolderComponent/PostHolder.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../actions/postAction';\nimport PostCards from './PostCard';\nimport './PostHolder.css';\n\nclass PostHolder extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayPosts = () => {\n      return this.props.posts.map(post => React.createElement(PostCards, {\n        key: post.id,\n        author: post.userId,\n        body: post.body,\n        title: post.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (JSON.stringify(nextProps.newPost) !== JSON.stringify({})) {\n      console.log(nextProps);\n      this.props.posts.unshift(post => React.createElement(PostCards, {\n        key: post.id,\n        author: post.author,\n        body: post.body,\n        title: post.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"postholder-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/new_blog\",\n      className: \"create-new-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Create new Blog\"), this.displayPosts());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostHolder);","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/PostHolderComponent/PostHolder.js"],"names":["React","Component","Link","connect","fetchPosts","PostCards","PostHolder","displayPosts","props","posts","map","post","id","userId","body","title","componentDidMount","componentWillReceiveProps","nextProps","JSON","stringify","newPost","console","log","unshift","author","render","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;;AACA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAgB/BM,YAhB+B,GAgBhB,MAAM;AACjB,aAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAC5B,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,QAAA,MAAM,EAAED,IAAI,CAACE,MAAtC;AAA8C,QAAA,IAAI,EAAEF,IAAI,CAACG,IAAzD;AAA+D,QAAA,KAAK,EAAEH,IAAI,CAACI,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAEH,KAnB8B;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWJ,UAAX;AACH;;AAEDa,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AAEjC,QAAGC,IAAI,CAACC,SAAL,CAAeF,SAAS,CAACG,OAAzB,MAAsCF,IAAI,CAACC,SAAL,CAAe,EAAf,CAAzC,EAA6D;AACzDE,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,WAAKV,KAAL,CAAWC,KAAX,CAAiBe,OAAjB,CAAyBb,IAAI,IACzB,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,QAAA,MAAM,EAAED,IAAI,CAACc,MAAtC;AAA8C,QAAA,IAAI,EAAEd,IAAI,CAACG,IAAzD;AAA+D,QAAA,KAAK,EAAEH,IAAI,CAACI,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAODW,EAAAA,MAAM,GAAG;AACL,WACA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEM,KAAKnB,YAAL,EAFN,CADA;AAMH;;AA5B8B;;AA+BnC,MAAMoB,eAAe,GAAGC,KAAK,KAAK;AAC1BnB,EAAAA,KAAK,EAAEmB,KAAK,CAACnB,KAAN,CAAYoB,KADO;AAE1BR,EAAAA,OAAO,EAAEO,KAAK,CAACnB,KAAN,CAAYqB;AAFK,CAAL,CAA7B;;AAKA,eAAe3B,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,UAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchPosts } from '../../actions/postAction';\nimport PostCards from './PostCard';\nimport './PostHolder.css';\nclass PostHolder extends Component {\n\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        \n        if(JSON.stringify(nextProps.newPost) !== JSON.stringify({})) {\n            console.log(nextProps);\n            this.props.posts.unshift(post =>\n                <PostCards key={post.id} author={post.author} body={post.body} title={post.title}/>\n            );\n        }\n    }\n\n    displayPosts = () => {\n        return this.props.posts.map(post => \n            <PostCards key={post.id} author={post.userId} body={post.body} title={post.title}/>)\n    }\n\n    render() {\n        return (\n        <div className=\"postholder-container\">\n            <Link to=\"/new_blog\" className=\"create-new-post\">Create new Blog</Link>\n            { this.displayPosts() }\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n        posts: state.posts.items,\n        newPost: state.posts.item\n})\n\nexport default connect(mapStateToProps, { fetchPosts })(PostHolder);"]},"metadata":{},"sourceType":"module"}