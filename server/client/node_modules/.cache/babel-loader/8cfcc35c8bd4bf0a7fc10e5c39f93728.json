{"ast":null,"code":"import { NEW_USER, UPDATE_USER } from './types';\nimport axios from 'axios';\nexport const createNewUser = userData => async dispatch => {\n  // TODO: add a new user to DB\n  const createUser = await fetch('http://localhost:5000/api/register', {\n    method: 'POST',\n    header: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  const response = await createUser.json();\n  console.log('RESPONSE', createUser); // console.log('NEW_USER', response);\n\n  dispatch({\n    type: NEW_USER,\n    payload: response\n  });\n};\nexport const updateLoginUser = (userData, scheme) => async dispatch => {\n  console.log(scheme);\n\n  if (scheme === 'google') {\n    // TODO: fetch user from the DB\n    const fetchedUser = await axios.get('http://localhost:5000/auth/google');\n    dispatch({\n      type: UPDATE_USER,\n      payload: fetchedUser.data\n    });\n  } else {\n    // TODO: fetch user from the DB\n    const fetchedUser = await axios.post('/api/get_user/', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    dispatch({\n      type: UPDATE_USER,\n      payload: fetchedUser.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/actions/signin_login_action.js"],"names":["NEW_USER","UPDATE_USER","axios","createNewUser","userData","dispatch","createUser","fetch","method","header","body","JSON","stringify","response","json","console","log","type","payload","updateLoginUser","scheme","fetchedUser","get","data","post","headers"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACzD;AACA,QAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,IAAAA,MAAM,EAAE,MADyD;AAEjEC,IAAAA,MAAM,EAAE;AACJ,sBAAgB;AADZ,KAFyD;AAKjEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAL2D,GAAvC,CAA9B;AAQA,QAAMS,QAAQ,GAAG,MAAMP,UAAU,CAACQ,IAAX,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,UAAxB,EAZyD,CAazD;;AACAD,EAAAA,QAAQ,CAAC;AACLY,IAAAA,IAAI,EAAEjB,QADD;AAELkB,IAAAA,OAAO,EAAEL;AAFJ,GAAD,CAAR;AAIH,CAlBM;AAoBP,OAAO,MAAMM,eAAe,GAAG,CAACf,QAAD,EAAWgB,MAAX,KAAsB,MAAMf,QAAN,IAAkB;AACnEU,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;;AACA,MAAGA,MAAM,KAAK,QAAd,EAAwB;AACpB;AACA,UAAMC,WAAW,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,mCAAV,CAA1B;AACAjB,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEG,WAAW,CAACE;AAFhB,KAAD,CAAR;AAIH,GAPD,MAOO;AACH;AACA,UAAMF,WAAW,GAAG,MAAMnB,KAAK,CAACsB,IAAN,CAAW,gBAAX,EAA6B;AACnDhB,MAAAA,MAAM,EAAE,MAD2C;AAEnDiB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF0C;AAKnDf,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAL6C,KAA7B,CAA1B;AAOAC,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEG,WAAW,CAACE;AAFhB,KAAD,CAAR;AAIH;AACJ,CAvBM","sourcesContent":["import { NEW_USER, UPDATE_USER } from './types';\nimport axios from 'axios';\nexport const createNewUser = (userData) => async dispatch => {\n    // TODO: add a new user to DB\n    const createUser = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        header: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n    })\n\n    const response = await createUser.json()\n\n    console.log('RESPONSE', createUser)\n    // console.log('NEW_USER', response);\n    dispatch({\n        type: NEW_USER,\n        payload: response\n    })\n}\n\nexport const updateLoginUser = (userData, scheme) => async dispatch => {\n    console.log(scheme);\n    if(scheme === 'google') {\n        // TODO: fetch user from the DB\n        const fetchedUser = await axios.get('http://localhost:5000/auth/google');\n        dispatch({\n            type: UPDATE_USER, \n            payload: fetchedUser.data\n        })\n    } else {\n        // TODO: fetch user from the DB\n        const fetchedUser = await axios.post('/api/get_user/', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        })\n        dispatch({\n            type: UPDATE_USER, \n            payload: fetchedUser.data\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}