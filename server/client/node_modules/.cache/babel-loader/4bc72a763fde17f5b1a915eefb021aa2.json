{"ast":null,"code":"import { NEW_USER, UPDATE_USER } from './types';\nexport const createNewUser = userData => async dispatch => {\n  // TODO: add a new user to DB\n  const createUser = await fetch('http://localhost:5000/new_user', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  const response = await createUser.json();\n  console.log('NEW_USER', response);\n  dispatch({\n    type: NEW_USER,\n    payload: response\n  });\n};\nexport const updateLoginUser = (userData, scheme) => async dispatch => {\n  console.log(scheme);\n\n  if (scheme === 'google') {\n    // TODO: fetch user from the DB\n    const fetchUser = await fetch('http://localhost:5000/auth/google');\n    const response = await fetchUser.json();\n    dispatch({\n      type: UPDATE_USER,\n      payload: response\n    });\n  } else {\n    // TODO: fetch user from the DB\n    const fetchUser = await fetch('http://localhost:5000/get_user', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    const response = await fetchUser.json();\n    dispatch({\n      type: UPDATE_USER,\n      payload: response\n    });\n  }\n};","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/actions/signin_login_action.js"],"names":["NEW_USER","UPDATE_USER","createNewUser","userData","dispatch","createUser","fetch","method","headers","body","JSON","stringify","response","json","console","log","type","payload","updateLoginUser","scheme","fetchUser"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;AAEA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACzD;AACA,QAAMC,UAAU,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFoD;AAK7DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AALuD,GAAnC,CAA9B;AAOA,QAAMS,QAAQ,GAAG,MAAMP,UAAU,CAACQ,IAAX,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAR,EAAAA,QAAQ,CAAC;AACLY,IAAAA,IAAI,EAAEhB,QADD;AAELiB,IAAAA,OAAO,EAAEL;AAFJ,GAAD,CAAR;AAIH,CAfM;AAiBP,OAAO,MAAMM,eAAe,GAAG,CAACf,QAAD,EAAWgB,MAAX,KAAsB,MAAMf,QAAN,IAAkB;AACnEU,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;;AACA,MAAGA,MAAM,KAAK,QAAd,EAAwB;AACpB;AACA,UAAMC,SAAS,GAAG,MAAMd,KAAK,CAAC,mCAAD,CAA7B;AACA,UAAMM,QAAQ,GAAG,MAAMQ,SAAS,CAACP,IAAV,EAAvB;AACAT,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEf,WADD;AAELgB,MAAAA,OAAO,EAAEL;AAFJ,KAAD,CAAR;AAIH,GARD,MAQO;AACH;AACA,UAAMQ,SAAS,GAAG,MAAMd,KAAK,CAAC,gCAAD,EAAmC;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFmD;AAK5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AALsD,KAAnC,CAA7B;AAOA,UAAMS,QAAQ,GAAG,MAAMQ,SAAS,CAACP,IAAV,EAAvB;AACAT,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEf,WADD;AAELgB,MAAAA,OAAO,EAAEL;AAFJ,KAAD,CAAR;AAIH;AACJ,CAzBM","sourcesContent":["import { NEW_USER, UPDATE_USER } from './types';\n\nexport const createNewUser = (userData) => async dispatch => {\n    // TODO: add a new user to DB\n    const createUser = await fetch('http://localhost:5000/new_user', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n    });\n    const response = await createUser.json()\n    console.log('NEW_USER', response);\n    dispatch({\n        type: NEW_USER,\n        payload: response\n    })\n}\n\nexport const updateLoginUser = (userData, scheme) => async dispatch => {\n    console.log(scheme);\n    if(scheme === 'google') {\n        // TODO: fetch user from the DB\n        const fetchUser = await fetch('http://localhost:5000/auth/google')\n        const response = await fetchUser.json()\n        dispatch({\n            type: UPDATE_USER, \n            payload: response\n        })\n    } else {\n        // TODO: fetch user from the DB\n        const fetchUser = await fetch('http://localhost:5000/get_user', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        })\n        const response = await fetchUser.json()\n        dispatch({\n            type: UPDATE_USER, \n            payload: response\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}