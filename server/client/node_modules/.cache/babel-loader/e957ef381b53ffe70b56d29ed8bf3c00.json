{"ast":null,"code":"import { FETCH_POST, NEW_POST } from './types';\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => dispatch({\n    type: FETCH_POST,\n    payload: posts\n  })).catch(err => console.log('FETCH FAILED ' + err));\n};\nexport const createPost = postData => dispatch => {\n  fetch('https://jsonplaceholder.typecode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postData)\n  }).then(res => res.json()).then(postResp => dispatch({\n    type: NEW_POST,\n    payload: postResp\n  }));\n};","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/actions/postAction.js"],"names":["FETCH_POST","NEW_POST","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","catch","err","console","log","createPost","postData","method","headers","body","JSON","stringify","postResp"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,SAArC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AACxCC,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,KAAK,IAAIL,QAAQ,CAAC;AACpBM,IAAAA,IAAI,EAAET,UADc;AAEpBU,IAAAA,OAAO,EAAEF;AAFW,GAAD,CAF3B,EAMKG,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,kBAAkBF,GAA9B,CANlB;AAOH,CARM;AAUP,OAAO,MAAMG,UAAU,GAAIC,QAAD,IAAcb,QAAQ,IAAI;AAChDC,EAAAA,KAAK,CAAC,4CAAD,EAA+C;AAChDa,IAAAA,MAAM,EAAE,MADwC;AAEhDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFuC;AAKhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAL0C,GAA/C,CAAL,CAOCX,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMiB,QAAQ,IAAInB,QAAQ,CAAC;AACvBM,IAAAA,IAAI,EAAER,QADiB;AAEvBS,IAAAA,OAAO,EAAEY;AAFc,GAAD,CAR1B;AAYH,CAbM","sourcesContent":["import { FETCH_POST, NEW_POST } from './types';\n\nexport const fetchPosts = () => dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res => res.json())\n        .then(posts => dispatch({\n            type: FETCH_POST,\n            payload: posts\n        }))\n        .catch(err => console.log('FETCH FAILED ' + err))\n}\n\nexport const createPost = (postData) => dispatch => {\n    fetch('https://jsonplaceholder.typecode.com/posts', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(postData)\n    })\n    .then(res => res.json())\n    .then(postResp => dispatch({\n        type: NEW_POST,\n        payload: postResp\n    }))\n}"]},"metadata":{},"sourceType":"module"}