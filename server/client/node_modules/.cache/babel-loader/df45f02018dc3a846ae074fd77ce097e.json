{"ast":null,"code":"var _jsxFileName = \"/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/LoginComponent/Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = strategy => {\n      if (strategy === 'email') {\n        this.setState({\n          emailLogin: true\n        });\n      } else if (strategy === 'google') {\n        // TODO: redirect to google page\n        fetch('http://localhost:5000/auth/google').then(res => res.json()).then(console.log).catch(err => console.log(err));\n      }\n    };\n\n    this.onEmailChange = e => this.setState({\n      email: e.target.value\n    });\n\n    this.onPasswordChange = e => this.setState({\n      password: e.target.value\n    });\n\n    this.onLoginFormSubmit = () => {\n      // TODO: send data to backend system and redirect\n      console.log(\"ON FORM SUBMIT\");\n    };\n\n    this.state = {\n      emailLogin: false,\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"LOGIN\")), React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, !this.state.emailLogin ? React.createElement(\"button\", {\n      onClick: () => {\n        this.onLogin('email');\n      },\n      className: \"login_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Login with email\") : null, !this.state.emailLogin ? React.createElement(\"button\", {\n      onClick: () => this.onLogin('google'),\n      className: \"login_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Login with Google\") : null, this.state.emailLogin ? React.createElement(\"form\", {\n      className: \"login_form_fields\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Enter email\",\n      onChange: this.onEmailChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      onChange: this.onPasswordChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onLoginFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login\")) : null));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/LoginComponent/Login.js"],"names":["React","Component","Login","constructor","props","onLogin","strategy","setState","emailLogin","fetch","then","res","json","console","log","catch","err","onEmailChange","e","email","target","value","onPasswordChange","password","onLoginFormSubmit","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Login.css';\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailLogin: false,\n            email: '',\n            password: ''\n        }\n    }\n\n    onLogin = (strategy) => {\n        if(strategy === 'email') {\n            this.setState({ emailLogin: true });\n        } \n        else if(strategy === 'google') {\n            // TODO: redirect to google page\n            fetch('http://localhost:5000/auth/google') \n                .then(res => res.json())\n                .then(console.log)\n                .catch(err => console.log(err));\n        }\n    }\n\n    onEmailChange = (e) => this.setState({ email: e.target.value });\n    onPasswordChange = (e) => this.setState({ password: e.target.value });\n\n    onLoginFormSubmit = () => {\n        // TODO: send data to backend system and redirect\n        console.log(\"ON FORM SUBMIT\");\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"login-header\">\n                    <h3>LOGIN</h3>\n                </div>\n                <div className=\"login-form\">\n                    { !this.state.emailLogin ? \n                        <button onClick={() => {this.onLogin('email')}} className=\"login_btn\">Login with email</button> \n                        : null }\n                    { !this.state.emailLogin ? \n                        <button onClick={() => this.onLogin('google')} className=\"login_btn\">Login with Google</button>\n                        : null }\n                    { this.state.emailLogin ? \n                        <form className=\"login_form_fields\" method=\"POST\">\n                            <input type=\"text\" name=\"email\" \n                                placeholder=\"Enter email\" onChange={this.onEmailChange} required/>\n                            <input type=\"password\" name=\"password\" \n                                placeholder=\"Enter password\" onChange={this.onPasswordChange} required/>\n                            <button type=\"submit\" onClick={this.onLoginFormSubmit}>Login</button>\n                        </form> : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}