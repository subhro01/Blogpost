{"ast":null,"code":"var _jsxFileName = \"/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/CreatePostComponent/PostModal.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost } from '../../actions/postAction';\nimport './PostModal.css';\n\nclass PostModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitForm = e => {\n      e.preventDefault();\n      const post = {\n        title: this.state.title,\n        body: this.state.postbody,\n        author: this.state.author\n      };\n      this.props.newPost(post);\n    };\n\n    this.onTitleChange = e => this.setState({\n      title: e.target.value\n    });\n\n    this.onBodyChange = e => this.setState({\n      postbody: e.target.value\n    });\n\n    this.state = {\n      title: '',\n      postbody: '',\n      author: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"create-post-modal-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"post-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\\u2190\")), React.createElement(\"div\", {\n      className: \"post-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Create a new post\")), React.createElement(\"div\", {\n      className: \"post-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: this.onSubmitForm,\n      className: \"post-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      value: this.props.author,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      onChange: this.onTitleChange,\n      placeholder: \"TITLE\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"upload-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Uploaad image - feature coming soon\"), React.createElement(\"textarea\", {\n      name: \"postbody\",\n      onChange: this.onBodyChange,\n      placeholder: \"POST\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"post-submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Create\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  createPost\n})(PostModal);","map":{"version":3,"sources":["/home/subhro/Desktop/WebProjects/Blogpost/client/blogpost-frontend/src/Components/CreatePostComponent/PostModal.js"],"names":["React","Component","Link","connect","createPost","PostModal","constructor","props","onSubmitForm","e","preventDefault","post","title","state","body","postbody","author","newPost","onTitleChange","setState","target","value","onBodyChange","render","mapStateToProps","posts","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAE9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASHC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADT;AAETE,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,QAFR;AAGTC,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AAHV,OAAb;AAKA,WAAKT,KAAL,CAAWU,OAAX,CAAmBN,IAAnB;AACH,KAjBkB;;AAAA,SAmBnBO,aAnBmB,GAmBFT,CAAD,IAAO,KAAKU,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAAEH,CAAC,CAACW,MAAF,CAASC;AAAlB,KAAd,CAnBJ;;AAAA,SAoBnBC,YApBmB,GAoBHb,CAAD,IAAO,KAAKU,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAEN,CAAC,CAACW,MAAF,CAASC;AAArB,KAAd,CApBH;;AAEf,SAAKR,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETG,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAeDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAE,KAAKf,YAA/B;AAA6C,MAAA,SAAS,EAAC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWS,MAAnD;AAA2D,MAAA,QAAQ,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKE,aAA/C;AAA8D,MAAA,WAAW,EAAC,OAA1E;AAAkF,MAAA,QAAQ,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAHJ,EAII;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,QAAQ,EAAE,KAAKI,YAAzC;AAAuD,MAAA,WAAW,EAAC,MAAnE;AAA0E,MAAA,QAAQ,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CAJJ,CAJJ,CADJ;AAqBH;;AA9C6B;;AAiDlC,MAAME,eAAe,GAAGX,KAAK,KAAK;AAC9BI,EAAAA,OAAO,EAAEJ,KAAK,CAACY,KAAN,CAAYC;AADS,CAAL,CAA7B;;AAIA,eAAevB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,SAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { createPost } from '../../actions/postAction';\nimport './PostModal.css';\n\nclass PostModal extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            postbody: '',\n            author: '',\n        }\n    }\n\n    onSubmitForm = (e) => {\n        e.preventDefault();\n        const post = {\n            title: this.state.title,\n            body: this.state.postbody,\n            author: this.state.author\n        }\n        this.props.newPost(post);\n    }\n\n    onTitleChange = (e) => this.setState({ title: e.target.value });\n    onBodyChange = (e) => this.setState({ postbody: e.target.value });\n\n    render() {\n        return (\n            <div className=\"create-post-modal-container\">\n                <Link to='/'>\n                    <button className=\"post-back\">&#8592;</button>\n                </Link>\n                <div className=\"post-container\">\n                    <div className=\"post-header\">\n                        <h3>Create a new post</h3>\n                    </div>\n                    <div className=\"post-body\">\n                        <form action=\"\" onSubmit={this.onSubmitForm} className=\"post-form-body\">\n                            <input type=\"text\" name=\"author\" value={this.props.author} disabled/>\n                            <input type=\"text\" name=\"title\" onChange={this.onTitleChange} placeholder=\"TITLE\" required/>\n                            <button className=\"upload-button\">Uploaad image - feature coming soon</button>\n                            <textarea name=\"postbody\" onChange={this.onBodyChange} placeholder=\"POST\" required/>\n                            <button type=\"submit\" className=\"post-submit-button\">Create</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    newPost: state.posts.item\n})\n\nexport default connect(mapStateToProps, { createPost })(PostModal);"]},"metadata":{},"sourceType":"module"}